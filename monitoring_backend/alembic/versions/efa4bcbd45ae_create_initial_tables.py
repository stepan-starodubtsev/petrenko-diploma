"""create_initial_tables

Revision ID: efa4bcbd45ae
Revises: 
Create Date: 2025-05-26 20:12:35.253268

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'efa4bcbd45ae'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hosts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('host_type', sa.Enum('mikrotik_snmp', 'windows_agent', 'ubuntu_agent', name='host_type_enum_type'), nullable=False),
    sa.Column('unique_agent_id', sa.String(length=255), nullable=True),
    sa.Column('snmp_community', sa.String(length=255), nullable=True),
    sa.Column('snmp_port', sa.Integer(), nullable=True),
    sa.Column('snmp_version', sa.String(length=10), nullable=True),
    sa.Column('availability_status', sa.Enum('up', 'down', 'unknown', 'pending_approval', name='host_availability_status_enum_type'), nullable=False),
    sa.Column('last_metric_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_monitored', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hosts_ip_address'), 'hosts', ['ip_address'], unique=False)
    op.create_index(op.f('ix_hosts_name'), 'hosts', ['name'], unique=True)
    op.create_index(op.f('ix_hosts_unique_agent_id'), 'hosts', ['unique_agent_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('admin', 'user', name='user_role_enum_type'), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('metric_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('host_id', sa.UUID(), nullable=False),
    sa.Column('metric_key', sa.String(length=255), nullable=False),
    sa.Column('value_numeric', sa.Float(), nullable=True),
    sa.Column('value_text', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['host_id'], ['hosts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_metric_data_host_id'), 'metric_data', ['host_id'], unique=False)
    op.create_index(op.f('ix_metric_data_metric_key'), 'metric_data', ['metric_key'], unique=False)
    op.create_index(op.f('ix_metric_data_timestamp'), 'metric_data', ['timestamp'], unique=False)
    op.create_table('trigger_configs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('host_id', sa.UUID(), nullable=False),
    sa.Column('internal_trigger_key', sa.String(length=255), nullable=False),
    sa.Column('name_override', sa.String(length=255), nullable=True),
    sa.Column('description_override', sa.Text(), nullable=True),
    sa.Column('user_threshold_value', sa.String(length=255), nullable=False),
    sa.Column('current_status', sa.Enum('ok', 'problem', 'unknown', name='trigger_status_enum_type'), nullable=False),
    sa.Column('severity_override', sa.Enum('not_classified', 'information', 'warning', 'average', 'high', 'disaster', name='trigger_severity_enum_type'), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('last_status_change_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_evaluated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_metric_value_snapshot', sa.String(length=255), nullable=True),
    sa.Column('problem_started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['host_id'], ['hosts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trigger_configs_host_id'), 'trigger_configs', ['host_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trigger_configs_host_id'), table_name='trigger_configs')
    op.drop_table('trigger_configs')
    op.drop_index(op.f('ix_metric_data_timestamp'), table_name='metric_data')
    op.drop_index(op.f('ix_metric_data_metric_key'), table_name='metric_data')
    op.drop_index(op.f('ix_metric_data_host_id'), table_name='metric_data')
    op.drop_table('metric_data')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_hosts_unique_agent_id'), table_name='hosts')
    op.drop_index(op.f('ix_hosts_name'), table_name='hosts')
    op.drop_index(op.f('ix_hosts_ip_address'), table_name='hosts')
    op.drop_table('hosts')
    # ### end Alembic commands ###
